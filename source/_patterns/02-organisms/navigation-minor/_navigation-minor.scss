.qh__nav-minor {
  background-color: var(--fc__default__bg);
  border-top: $border-lg solid var(--fc__nav-minor__border);
  min-width: rem(320);
  position: relative;
  overflow: visible;

  @include breakpoint-down($bp__single-col-content) {
    position: fixed;
    left: 0;
    width: rem(320);
    transform: translateX(- rem(320));
    transition: transform $transition-duration-base $transition-timing-base;

    > ul {
      transform: translateX(- rem(48));
      transition: transform $transition-duration-base $transition-timing-base ($transition-duration-base/2);
    }

    &#{&}--expanded {
      transform: translateX(0);

      > ul {
        transform: translateX(0);
      }
    }
  }

  // Interaction styles come from .qh__accordion
  &:hover,
  &:focus,
  &:focus-within {}

  a {
    display: block;
    transition: $transition-base;
  }

  // <button>
  &__toggle {
    background-color: var(--fc__nav-minor__border);
    background-image: none;
    padding: ($button-v-spacing/2) $button-h-spacing ($button-v-spacing/2) 0;
    overflow: visible;
    position: absolute;
      top: - $border-lg;
      right: 0;
    transform: rotate(-90deg);
    transform-origin: top right;

    &:hover::before,
    &:focus::before {
      border-top-color: var(--fc__default__button--hover__bg);
      border-right-color: var(--fc__default__button--hover__bg);
    }

    // Little triangle at the bottom
    &::before {
      border-top: rem(21) solid var(--fc__nav-minor__border);
      border-right: rem(21) solid var(--fc__nav-minor__border);
      border-bottom: rem(21) solid transparent;
      border-left: rem(21) solid transparent;
      content: '';
      height: 0;
      width: 0;
      position: absolute;
        top: 0;
        left: - rem(42);
      transition: $transition-base;
    }

    @include breakpoint-up($bp__single-col-content) {
      display: none;
      visibility: hidden;
    }
  }

  // <ul>
  &__list {
    background-color: var(--fc__nav-minor__bg);

    &.qh__accordion {
      border: $border-xs solid transparent;
      margin-top: 0;
    }

    &__sub {
      background-color: var(--fc__nav-minor__sub__bg);
      border-left: 0.5rem solid var(--fc__nav-minor__link--hover__bg);
    }
  }

  // <li>
  &__item {
    position: relative;
    overflow: visible;

    &__sub {}

    &:not(&__sub) + &:not(&__sub)::before {
      border-top: $border-sm solid var(--fc__default__bg);
      content: '';
      display: block;
      height: 0;
      margin: 0 em(8);
      flex-basis: 100%;
    }
  }

  // <li>
  &__has-children {
    // Set up a split button design
    $button-width: em(44);

    display: flex;
    flex-flow: row wrap;
    align-items: stretch;
    justify-content: space-between;

    .qh__nav-minor__link {
      flex: 1 0 calc(100% - #{$button-width});
      margin-left: auto;
      min-width: calc(100% - #{$button-width});
    }

    .qh__accordion__button {
      display: block;
      flex: 0 0 $icon-dimension;
      margin: 0 0 0 auto;
      padding: 0.25rem 0;

      .qh__icon {
        margin: 0;
      }
    }

    .qh__accordion__content {
      background-color: transparent;
      flex-basis: 100%;
      padding: 0 !important; // sigh
      // Needed to override the specificity of .js [aria-expanded="true"] + .qh__accordion__content
    }
  }

  // Restyling accordion elements classes
  .qh__accordion__button {

    &[aria-expanded="true"] {
      background-color: var(--fc__nav-minor__link--hover__bg);
    }

    .qh__icon__plusminus {
      &__circle {
        fill: var(--fc__nav-minor__link--hover__bg);
      }
      &__vert,
      &__horiz {
        fill: var(--fc__nav-minor__link);
      }
    }

    &:hover,
    &:focus,
    .js &[aria-expanded="true"] {
      .qh__icon__plusminus {
        &__circle {
          fill: var(--fc__default__bg);
        }
        &__vert,
        &__horiz {
          fill: var(--fc__nav-minor__link--hover);
        }
      }
    }
  }

  // <a> & <button> colors
  .qh__accordion__button,
  &__link {

    &,
    &:visited {
      background-color: var(--fc__nav-minor__link__bg);
      color: var(--fc__nav-minor__link);
      text-decoration: none;
    }

    &:not(&--current):hover,
    &:not(&--current):focus {
      background-color: var(--fc__nav-minor__link--hover__bg);
      color: var(--fc__nav-minor__link--hover);
    }

    &:focus {
      outline-color: var(--fc__nav-main__link--focus);
      outline-offset: -2px;
    }

    &:active {
      color: var(--fc__nav-main__link--active);
    }
  }

  // <a>
  &__link {
    font-weight: normal; // TODO: Reset with the proper weight
    padding: $nav-a-v-spacing $nav-a-h-spacing--sm;

    &__sub {
      font-size: 0.875em; // TODO: Reset with the proper size
    }

    // Treat a current link as disabled. It should not have a visual state change
    &--current {
      cursor: default;
      pointer-events: none;
    }

    &--current,
    .js &--current.qh__accordion__button[aria-expanded="true"] {
      background-color: var(--fc__nav-minor__bg);
      color: var(--fc__nav-minor__fg);
      font-weight: 550; // TODO: Reset with the proper weight
      text-decoration: none;
    }
  }
}
