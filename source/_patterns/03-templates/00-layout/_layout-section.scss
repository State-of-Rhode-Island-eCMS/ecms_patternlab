// Desktop Only! Needs mobile styling added once the pattern is established for mobile breakpoints
$grid-gap: 2rem;

.qh-layout-section {
  display: grid;
  grid-gap: $grid-gap;
  max-width: var(--content-max-width);
  margin: 0 auto;

  // Temp gutters and VR
  padding: 2rem 0;

  // Column sizing
  &--col-size {

    // One Column sizing
    &-25 {
      display: block;
      margin: 0 auto;
      width: 25%;
    }

    &-50 {
      display: block;
      margin: 0 auto;
      width: 50%;
    }

    &-75 {
      display: block;
      margin: 0 auto;
      width: 75%;
    }

    &-100 {
      display: block;
      margin: 0 auto;
      width: 100%;
    }

    // Two Column sizing
    &-25-75 {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 1fr 2fr;
      }
      @media screen and (min-width: $bp--xlarge) {
        grid-template-columns: 1fr 3fr;
      }
    }

    &-33-67 {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 1fr 2fr;
      }
    }

    &-50-50 {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 1fr 1fr;
      }
    }

    &-67-33 {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 2fr 1fr;
      }
    }

    &-75-25 {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 2fr 1fr;
      }
      @media screen and (min-width: $bp--xlarge) {
        grid-template-columns: 3fr 1fr;
      }
    }

    // Three and four column grids are repeated with equal columns.
    &-33-repeat {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 1fr 1fr 1fr;
      }
    }

    &-25-repeat {
      grid-template-columns: 1fr;
      @media screen and (min-width: $bp--medium) {
        grid-template-columns: 1fr 1fr;
      }
      @media screen and (min-width: $bp--xlarge) {
        grid-template-columns: 1fr 1fr 1fr 1fr;
      }
    }
  }

  // Column elements
  &__col {

    .block:first-child:last-child {
      height: 100%;
    }

    // spacing between blocks within columns
    > * + * {
      margin-top: $general-v-spacing;
    }

    &--first {
      max-width: 100%;
    }

    &--second {
      max-width: 100%;
    }

    &--third {
      max-width: 100%;
    }

    &--fourth {
      max-width: 100%;
    }
  }

  // Full width
  &--full-width {
    max-width: 100%;
  }
}

// Temp styles
.layout-container.layout-builder-page {
  max-width: 100%;
}


.qh-background {
  &--rhodyred {
    background-color: var(--c__rhody-red);
  }

  &--calamari {
    background-color: var(--c__calamari);
  }

  &--navy {
    background-color: var(--c__navy);
    color: var(--c__white);
  }
}
