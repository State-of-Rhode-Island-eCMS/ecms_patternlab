$sidebar-min: rem(200);
$sidebar-max: rem(380);
$sidebar-column-gap: 5vw;
$sidebar-row-gap: rem(36);

.qh-layout {
  &__grid {
    @include qh-content-maxwidth();
    display: grid;
    grid-template-areas:
      'sidebar-top'
      'content'
      'sidebar-middle'
      'sidebar-bottom';
    margin-top: 5rem;
    margin-bottom: 5rem;
    padding-left: 1rem;

    @include breakpoint-up($bp__single-col-content) {
      grid-template-areas:
        'sidebar-top content'
        'sidebar-middle content'
        'sidebar-bottom content';
      grid-template-columns: minmax($sidebar-min, max-content) minmax(0, 1fr);
      grid-template-rows: min-content min-content 1fr;
      padding-left: 0;
    }
  }

  &__content {
    grid-area: content;
    max-width: 89vw;
    @include breakpoint-up($bp__single-col-content) {
      max-width: var(--content-max-width);
    }
  }

  &__sidebar-top {
    grid-area: sidebar-top;
    max-width: $sidebar-max;
    margin-right: $sidebar-column-gap;
    margin-bottom: $sidebar-row-gap;
    [dir="rtl"] & {
      margin-left: $sidebar-column-gap;
      margin-right: 0;
    }

    @include breakpoint-down($bp__single-col-content) {
      margin: 0;
    }
  }

  &__sidebar-middle {
    grid-area: sidebar-middle;
    max-width: $sidebar-max;
    margin-right: $sidebar-column-gap;
  }

  &__sidebar-bottom {
    grid-area: sidebar-bottom;
    max-width: $sidebar-max;
    margin-right: $sidebar-column-gap;
  }

  // When empty, they look like this
  //<aside class="qh-layout__sidebar-middle" role="complementary">
  //  <div class="views-element-container block block-views block-views-blockpromotions-block-1" id="block-views-block-promotions-block-1">
  //    <div>
  //
  //    </div>
  //  </div>
  //</aside>
  // With whitespace as it is, &:empty will not match
  &__sidebar-middle,
  &__sidebar-bottom {
    // Kind of gross, but because of the above, only add margin if we have THREE levels of divs, not two
    > div > div > div {
      margin-bottom: $sidebar-row-gap;
    }
  }
}

// Page overlay for when any nav element is open
.page-overlay {
  backdrop-filter: blur(4px);
  background-color: rgba(0,0,0,0.25);
  height: 100vh;
  left: 0;
  opacity: 0;
  position: fixed;
  top: 0;
  width: 100vw;
  transition:
    opacity $transition-duration-medium $transition-timing-base 0ms,
    z-index 0ms linear $transition-duration-medium;
  z-index: -1;
&.active {
    background-color: rgba(0,0,0,.35);
    opacity: 1;
    z-index: z(mobile-body-overlay);
  }
}


