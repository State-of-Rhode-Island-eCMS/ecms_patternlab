body {
  --sp__gutter: 1.5rem;
  --sp__vertical: 1rem;
}

// Utilities?
.qh-u {

  &__page__wrapper {
    // Set the defaults high up like on this kind of element (preferably the body)
    background-color: var(--t__default__bg);
    color: var(--t__default__fg);

    h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
      color: var(--t__default__header);
      margin: 0;
    }

    a {
      color: var(--t__default__link--static);

      &:hover,
      &:focus {
        color: var(--t__default__link--hover);
      }

      // NOt crazy about setting these globally. If we do, we have to reset all of them when the theme changes
      &:visited {
        color: var(--t__default__link--visited);
      }

      &:active {
        color: var(--t__default__link--active);
      }
    }
  }
}

// Page-level objects
.qh-o {

  &__official-site,
  &__page-header,
  &__main-nav {
    padding: var(--sp__vertical) var(--sp__gutter);
  }

  &__official-site {
    background-color: var(--t__official-header__bg);
    color: var(--t__official-header__fg);

    a {
      color: var(--t__official-header__link--static);

      &:hover,
      &:focus {
        color: var(--t__official-header__link--hover);
      }
    }

    p {
      max-width: unset;
    }
  }

  &__page-header {
    background-color: var(--t__page-header__bg);
    color: var(--t__page-header__fg);

    h1 {
      color: var(--t__page-header__header);
    }

    a {
      color: var(--t__page-header__link--static);

      &:hover,
      &:focus {
        color: var(--t__page-header__link--hover);
      }
    }
  }

  &__main-nav {
    background-color: var(--t__page-nav__bg);

    a {
      color: var(--t__page-nav__link--static);

      &:hover,
      &:focus {
        color: var(--t__page-nav__link--hover);
      }
    }
  }
}

// Components
.qh-c {

  &__component-base {
    // Set the defaults for components here, which may be different from the body-level defaults
  }

  &__hero {
    background-color: var(--t__c__hero__bg); // when the image does not load
    background-size: cover;
    background-position: center bottom;
    background-repeat: no-repeat;
    padding: calc(var(--sp__vertical) * 2) calc(var(--sp__gutter) * 2);
  }

  //<div class="qh-c__hero__inner">
  //  <h2>Welcome to this site</h2>
  //  <p>Lorem ipsum dolor sit ametâ€¦</p>
  //  <button>Go to a page</button>
  //</div>
  &__hero__inner {
    color: var(--t__c__hero__fg);
    margin-right: 50%;
    padding: var(--sp__vertical) var(--sp__gutter);
    position: relative;
    z-index: 1;

    // Apply the color this way?
    &::before {
      background-color: var(--t__c__hero__bg);
      content: '';
      position: absolute;
        top: 0; right: 0; bottom: 0; left: 0;
      opacity: 0.92;
      z-index: -1;

      @supports (inset: 0) {
        inset: 0;
      }
    }

    h2 {
      color: var(--t__c__hero__header);
    }
  }
}

// Grids
.qh-g {

  &__row {
    // Setting this here will allow us to override it
    background-color: var(--t__default__bg);
    color: var(--t__default__fg);

    h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
      color: var(--t__default__header);
    }

    &__inner {
      display: flex;
      flex-flow: row nowrap;
      align-items: stretch;
      justify-content: center;
      margin: 0 auto;
      max-width: 75rem;
    }
  }

  &__col {
    // Setting this here will allow us to override it
    background-color: var(--t__default__bg);
    color: var(--t__default__fg);
    padding: var(--sp__vertical) var(--sp__gutter) calc(var(--sp__vertical) * 2);

    h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
      color: var(--t__default__header);
    }
  }
}
